version: "3.8"
services:
  dashboard-backstage:
    restart: always
    environment:
      - APP_CONFIG_app_baseUrl=https://dashboard.mainnet.dfinity.systems
      - APP_CONFIG_backend_baseUrl=https://dashboard.mainnet.dfinity.systems
    links:
      - dashboard-backend-mainnet
      - dashboard-backend-staging
    network_mode: "bridge"
  dashboard-backend-mainnet:
    restart: always
    environment:
      - GITLAB_API_TOKEN_RELEASE
      - GITLAB_API_TOKEN_IC_PUBLIC
      - LOCAL_REGISTRY_PATH=/registry_cache
      - NNS_URL=https://nns.ic0.app
      - NETWORK=mercury
      - RUST_BACKTRACE=1
    volumes:
      - backend_registry_cache_mainnet:/registry_cache
    network_mode: "bridge"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/version"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
  dashboard-backend-staging:
    image: registry.gitlab.com/dfinity-lab/core/release/dashboard-backend:${TAG:-latest}
    restart: always
    environment:
      - GITLAB_API_TOKEN_RELEASE
      - GITLAB_API_TOKEN_IC_PUBLIC
      - LOCAL_REGISTRY_PATH=/registry_cache
      - NNS_URL=http://[2600:3004:1200:1200:5000:7dff:fe29:a2f5]:8080
      - NETWORK=staging
      - RUST_BACKTRACE=1
    volumes:
      - backend_registry_cache_staging_2:/registry_cache
    network_mode: "bridge"
  slack:
    restart: always
    environment:
      - SLACK_URL
      - "SLACK_CHANNEL=#eng-release"
    volumes:
      - slack_state:/state/
    working_dir: /state/
    network_mode: "bridge"
  slack-watchdog:
    image: docker
    volumes: [ "/var/run/docker.sock:/var/run/docker.sock" ]
    command:
      [
        "/bin/sh",
        "-c",
        "while true; do sleep 60; if [ -z \"$$(docker logs release_slack_1 --since=1m 2>&1)\" ]; then echo -n \"restarting \"; docker restart release_slack_1; else echo \"target service is running\"; fi; done"
      ]
    restart: unless-stopped
    network_mode: "bridge"
  decentralization:
    restart: always
    network_mode: "bridge"
  autoheal-unhealthy-containers:
    image: willfarrell/autoheal:latest
    restart: always
    volumes: [ "/var/run/docker.sock:/var/run/docker.sock" ]
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_START_PERIOD=20
    network_mode: "bridge"

volumes:
  slack_state:
  backend_registry_cache_mainnet:
  backend_registry_cache_staging_2:
