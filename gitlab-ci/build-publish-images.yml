.rules-base-image:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - docker/**/*
        - Pipfile
        - Pipfile.lock
        - pyproject.toml
        - poetry.lock

docker-image-update:
  stage: .pre
  extends:
    - .kaniko-build
  rules:
    - !reference [.rules-base-image, rules]
    - !reference [.rules-manual, rules]
  interruptible: true
  # Some of those rules are made to make the build reproducible
  # --reproducible
  # --snapshotMode
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "docker/Dockerfile"
      --cache
      --cache-repo "${CI_REGISTRY_IMAGE}/ci-build/no-docker-cache"
      --destination "${CI_REGISTRY_IMAGE}/ci-build/no-docker:latest"
      --snapshotMode=redo
      --digest-file digest
      --reproducible
    - mkdir -p /workspace # Fails without creating this folder due to https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29587/
  artifacts:
    paths:
      - digest

update-base-image:
  stage: .post
  extends:
    - .k8s-workers
  rules:
    - if: '$CI_COMMIT_AUTHOR == "Release Team <eng-release-bots-aaaafbmaump5gpag4pbjfuarry@dfinity.slack.com>"'
      when: never
    - !reference [.rules-base-image, rules]
    - !reference [.rules-manual, rules]
  interruptible: true
  variables:
    UPDATE_SUBMODULES: "false"
  needs:
    - job: docker-image-update
      artifacts: true
  script:
    - python3 gitlab-ci/update-base-image-sha.py $(cat digest)

linear-jira-release:
  stage: release
  extends:
    - .kaniko-build
  needs: []
  dependencies: []
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:  # auto run if there are changes in this dir
        - linear-jira
    - !reference [.rules-manual, rules]
  interruptible: true
  variables:
    IMAGE_NAME: "linear-jira"
  script:
    - |
      if [ "${CI_COMMIT_BRANCH}" != "${CI_DEFAULT_BRANCH}" ]; then
        export KANIKO_NO_PUSH_FLAG="--no-push"
      else
        export KANIKO_NO_PUSH_FLAG=""
      fi
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/${IMAGE_NAME}"
      --cache
      --cache-repo "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}/cache"
      --destination "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:latest"
      --destination "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}"
      --reproducible
      $KANIKO_NO_PUSH_FLAG
    - mkdir -p /workspace # Fails without creating this folder due to https://gitlab.com/gitlab-org/gitlab-runner/-/issues/29587/

