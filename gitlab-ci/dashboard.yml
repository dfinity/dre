.rules-dashboard:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH' # upon a merge to main
      changes:
        - dashboard/**/*
        - rs/**/*
    - !reference [.rules-manual, rules]

.dashboard-build:
  stage: build
  extends:
    - .kaniko-build
    - .rules-dashboard
  
dashboard-backstage:
  extends:
    - .dashboard-build
  variables:
    APP: "dashboard-backstage"
    CONTEXT_PATH: "dashboard"
    DOCKERFILE_PATH: "dashboard/Dockerfile"

dashboard-backend-mainnet:
  extends:
    - .dashboard-build
  variables:
    APP: "dashboard-backend"
    CONTEXT_PATH: "rs"
    DOCKERFILE_PATH: "ic-management-backend/Dockerfile"

slack:
  extends:
    - .dashboard-build
  variables:
    APP: "slack"
    CONTEXT_PATH: "rs"
    DOCKERFILE_PATH: "slack-notifications/Dockerfile"

.docker-base:
  image: docker/compose:alpine-1.29.2
  needs: []
  dependencies: []
  stage: release
  retry: 2
  interruptible: true
  variables:
    RELEASE_BRANCH: release

dashboard-deploy:
  extends:
    - .docker-base
    - .rules-dashboard
  needs:
    - dashboard-backstage
    - dashboard-backend-mainnet
    - slack
  interruptible: false
  script:
    - |
      set -exou pipefail

      # checkout branch
      apk add git 
      git clone "https://gitlab-ci-token:${GITLAB_API_TOKEN}@gitlab.com/dfinity-lab/private/k8s/k8s.git"

      cd k8s
      git config user.email "idx@dfinity.org"
      git config user.name "IDX GitLab Automation"
      git checkout -b "update-image-tag-${CI_COMMIT_SHA}"

      # sed the changes
      # this regex matches the first group (ie the image name) and uses \1
      # called a back-reference to insert the first group matched, the second
      # part is to match the 40 characters hash that we replace with the $CI_COMMIT_SHA
      sed -i "s~\(\([[:alpha:]]\|-\)\+\):[[:alnum:]]\{40\}~\1:${CI_COMMIT_SHA}~g" bases/apps/mainnet-dashboard/statefulset-slack.yaml bases/apps/mainnet-dashboard/backend/base/deployment.yaml bases/apps/mainnet-dashboard/frontend/deployment.yaml

      # commit, push & create new merge request
      git add .
      if git diff --cached --quiet; then
          echo "No changes to commit."
          exit 0
      fi

      git commit -m "Updating container base image refs"
      git push \
          -o merge_request.create \
          -o merge_request.title="[nomrbot] - Updating container image refs mainnet-dashboard [$CI_COMMIT_SHA]" \
          -o merge_request.description="Changes to the release repository - [here](https://gitlab.com/dfinity-lab/core/release/-/commit/$CI_COMMIT_SHA)" \
          --force --set-upstream origin "update-image-tag-${CI_COMMIT_SHA}"

