load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "@crate_index_observability//:ic-async-utils",
    "@crate_index_observability//:ic-crypto-utils-threshold-sig-der",
    "//multiservice_discovery_shared",
    "//service_discovery",
    "@crate_index_observability//:ic-registry-client",
    "@crate_index_observability//:ic-types",
    "@crate_index_observability//:ic-utils",
    "@crate_index_observability//:base64",
    "@crate_index_observability//:crossbeam",
    "@crate_index_observability//:crossbeam-channel",
    "@crate_index_observability//:erased-serde",
    "@crate_index_observability//:futures-util",
    "@crate_index_observability//:humantime",
    "@crate_index_observability//:regex",
    "@crate_index_observability//:serde",
    "@crate_index_observability//:serde_json",
    "@crate_index_observability//:slog",
    "@crate_index_observability//:slog-async",
    "@crate_index_observability//:slog-term",
    "@crate_index_observability//:tokio",
    "@crate_index_observability//:url",
    "@crate_index_observability//:warp",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = []

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_binary(
    name = "multiservice_discovery",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_name = "multiservice_discovery",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES,
)

rust_test(
    name = "multiservice_discovery_test",
    aliases = ALIASES,
    crate = ":multiservice_discovery",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)
