name: Setup runner
description: Reusable action for setting up the github runner

inputs:
  AWS_ACCESS_KEY_ID:
    description: 'Access key for the S3 bucket'
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: 'Secret key for the S3 bucket'
    required: true

runs:
  using: composite
  steps:
    ########################################
    # Setup
    ########################################
    - uses: bazelbuild/setup-bazelisk@v2

    ########################################
    # Download and unpack cache
    ########################################
    - name: "‚òÅÔ∏è ‚¨áÔ∏è Mount caches"
      run: |
        ./bin/install-s3ql.sh
        mkdir -p ~/.s3ql
        cat <<_EOF | install -m 0600 /dev/stdin ~/.s3ql/authinfo2
        [default]
        storage-url: s3c://s3.eu-central-2.wasabisys.com:443/dre-ci-cache/s3ql
        backend-login: ${{ inputs.AWS_ACCESS_KEY_ID }}
        backend-password: ${{ inputs.AWS_SECRET_ACCESS_KEY}}
        _EOF

        mkdir -p ~/.cache/bazel ~/.cache/s3ql
        sudo chown -R $USER:$USER ~/.cache/bazel
        mount.s3ql --cachedir ~/.cache/s3ql --authfile ~/.s3ql/authinfo2 --cachesize 20971520 s3c://s3.eu-central-2.wasabisys.com:443/dre-ci-cache/s3ql ~/.cache/bazel
      shell: bash
    - name: "üßπ Clean bazel cache if we're preparing a new release"
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      # This is desirable to make sure bazel does not use stale pre-built binaries
      # Bazel actually keeps all intermediate objects so builds are still fast
      run: bazel clean
      shell: bash
