name: Setup runner
description: Reusable action for setting up the github runner

inputs:
  aws_access_key_id:
    description: 'AWS Access Key ID'
    required: true
  aws_secret_access_key:
    description: 'AWS Secret Access Key'
    required: true

runs:
  using: composite
  steps:
    ########################################
    # Setup
    ########################################
    - uses: bazelbuild/setup-bazelisk@v2

    ########################################
    # Download and unpack cache
    ########################################
    - name: "☁️ ⬇️ Restore bazel cache"
      uses: actions/cache/restore@v4
      with:
        path: "~/.cache/bazel"
        # Configure cache updates
        # https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
        # https://github.com/actions/cache/blob/main/examples.md#---bazel
        key: ${{ runner.os }}-bazel-${{ hashFiles('.bazelversion', '.bazelrc', 'WORKSPACE.bazel', 'Cargo.Bazel.lock', 'requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-bazel-
    - name: "🧹 Clean bazel cache if we're preparing a new release"
      if: ${{ startsWith(github.ref, 'refs/tags/v') }}
      # This is desirable to make sure bazel does not use stale pre-built binaries
      # Bazel actually keeps all intermediate objects so builds are still fast
      run: bazel clean
      shell: bash

    - name: "🌎 Setting up missing software"
      shell: bash
      run: |
        sudo apt-get update -y
        sudo apt-get upgrade -y

        sudo apt-get install ca-certificates curl git-all gcc -y
        sudo install -m 0755 -d /etc/apt/keyrings
        sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
        sudo chmod a+r /etc/apt/keyrings/docker.asc

        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
          $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
          sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update -y

        sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
        sudo service docker start
        mkdir -p ~/.cache/bazel