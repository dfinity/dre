name: Qualification

on:
  # triggered from Release Testing workflow in dfinity/ic
  workflow_call:
    inputs:
      version:
        description: "The version that should be qualified"
        type: string
        default: ""
  workflow_dispatch:
    inputs:
      version:
        description: "The version that should be qualified"
        type: string
        default: ""

# Run one qualification per commit.
# This means we can have multiple qualifications of different versions
# in parallel but only one qualification of each commit
concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.version || github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on:
      labels: dre-runner-custom
    container: ghcr.io/dfinity/dre/actions-runner:7efd87b0eac3ebd255be7efe00a3b39b0f9e9fc1
    outputs:
      matrix: ${{ steps.generate.outputs.output }}
    steps:
      - id: generate
        shell: bash
        run: |
          sudo apt-get install -y jq
          UNIQUE_VERSIONS=$(curl https://rollout-dashboard.ch1-rel1.dfinity.network/api/v1/rollouts | jq -r '.[] | select (.state != "failed") | select (.state != "complete") | .batches | to_entries[] | "\(.value)"' | jq '.subnets[].git_revision' |  sort | uniq | jq -s )
          echo "Will qualify starting from versions: ${UNIQUE_VERSIONS}"
          echo "output=$(jq -cn --argjson versions "$UNIQUE_VERSIONS" '{version: $versions}')" >> $GITHUB_OUTPUT

  qualify:
    name: Qualifying ${{ matrix.version }} -> ${{ inputs.version }}
    needs: setup
    strategy:
      matrix: ${{ fromJson(needs.setup.outputs.matrix) }}
    runs-on:
      labels: dre-runner-custom
    container: ghcr.io/dfinity/dre/actions-runner:7efd87b0eac3ebd255be7efe00a3b39b0f9e9fc1
    steps:
      - uses: actions/checkout@v4
        with:
          repository: "dfinity/dre" # this needs to be specified so it can be kicked off from the ic repo

      - name: "🔍 Check if the version is set"
        shell: bash
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            echo "Error: 'version' is required and cannot be empty."
            exit 1
          fi

      - name: "☁️ Setup runner"
        uses: ./.github/workflows/manage-runner-pre

      # This should be done in runner.Dockerfile
      - name: "Remove utsns and netns from containers.conf"
        shell: bash
        run: |
          sudo rm /etc/containers/containers.conf

      - name: "✨ Running qualification"
        shell: bash
        env:
          MANUALY_TTL_FARM: 1
        run: |
          mkdir -p ~/.config/dfx/identity/xnet-testing/
          echo "${{ secrets.XNET_PRINCIPAL_KEY }}" > ~/.config/dfx/identity/xnet-testing/identity.pem
          bazel run //rs/qualifier -- "${{ inputs.version }}" --initial-versions ${{ matrix.version }} --step-range 9..10

      - name: "⚙️ Uploading artifacts during qualification"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.version }}-${{ matrix.version }}
          path: /tmp/qualifier-artifacts/${{ inputs.version }}
          retention-days: 1
          overwrite: true

  finish:
    needs: qualify
    runs-on: ubuntu-22.04
    steps:
      - name: "Download all artifacts"
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: ${{ inputs.version }}-*

      - name: "Get current date"
        id: date
        shell: bash
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: "Upload artifacts to google drive"
        uses: adityak74/google-drive-upload-git-action@v0.3
        with:
          credentials: ${{ secrets.ARTIFACTS_DRIVE_CREDENTIALS }}
          filename: ${{ inputs.version }}-${{ steps.date.outputs.date }}
          folderId: ${{ secrets.ARTIFACTS_DRIVE_FOLDER_ID }}
          mirrorDirectoryStructure: true
