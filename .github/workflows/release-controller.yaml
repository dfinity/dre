name: Release controller
on:
  push:
    branches:
      - "main"
    paths:
      - release-controller/**
      - requirements*.lock
      - pyproject.toml
      - "*.bazel"
      - bazel/**
      - .github/**
  pull_request:
    paths:
      - release-controller/**
      - requirements*.lock
      - pyproject.toml
      - "*.bazel"
      - bazel/**
      - .github/**
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bazel-release-controller:
    name: Release controller pipeline
    runs-on:
      labels: dre-runner-custom
    # This image is based on ubuntu:20.04
    container: ghcr.io/dfinity/dre/actions-runner:6413f2909a49329ecbf5371ee7ddf07a9799b625
    permissions:
      contents: write
      packages: write
      pages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # The GitHub App token is necessary for pushing changed files back to the repository
      # If regular secrets.GITHUB_TOKEN is used instead, the push will not trigger any actions
      # https://github.com/orgs/community/discussions/25702
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.PR_AUTOMATION_BOT_PUBLIC_APP_ID }}
          private-key: ${{ secrets.PR_AUTOMATION_BOT_PUBLIC_PRIVATE_KEY }}

      - name: "‚òÅÔ∏è Setup runner"
        uses: ./.github/workflows/manage-runner-pre

      ########################################
      # Test
      # Will run test as a local subprocess because for some tests
      ########################################

      - name: "üöÄ Building"
        uses: ./.github/workflows/build
        with:
          # See above where the token is generated: we can't use regular secrets.GITHUB_TOKEN
          # since the push needs to trigger actions again
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"
          spec: //release-controller/... except attr(name, '.*oci_image.*', //release-controller/...)
      - name: "üöÄ Testing"
        shell: bash
        run: |
          set -o pipefail
          bazel query "//release-controller/... except attr(tags, 'manual', //...) except attr(name, '.*oci_image.*', //release-controller/...)" | xargs bazel test --config=ci --spawn_strategy=local --test_env=HOME=/home/runner

      ########################################
      # Upload container images
      ########################################

      - name: "üîß Login to GitHub Container Registry"
        if: ${{ startsWith(github.head_ref, 'container') || startsWith(github.ref, 'refs/heads/container') || (github.ref == 'refs/heads/main') }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "üì¶ Push images to GitHub Container Registry"
        if: ${{ startsWith(github.head_ref, 'container') || startsWith(github.ref, 'refs/heads/container') || (github.ref == 'refs/heads/main') }}
        shell: bash
        run: |
          set -ex -o pipefail
          oci_targets=$(bazel query --noshow_progress 'kind("oci_push", ...)')
          oci_targets=$(echo "$oci_targets" | grep //release-controller)
          echo "$oci_targets" | xargs -I_target bazel run _target -- --tag ${GITHUB_SHA}

      ########################################
      # Update k8s deployments
      # FIXME: probably can use registry_publish event to dispatch a separate pipeline.
      ########################################

      - name: "ü§ñ Update k8s deployments for release controller"
        if: ${{ startsWith(github.head_ref, 'container') || startsWith(github.ref, 'refs/heads/container') || (github.ref == 'refs/heads/main') }}
        uses: ./.github/workflows/update-k8s-deployments
        with:
          files-to-update: bases/apps/ic-release-controller/controller/controller.yaml bases/apps/ic-release-controller/commit-annotator/commit-annotator.yaml
          push-token: ${{ secrets.K8S_API_TOKEN }}
          component: release controller

      ########################################
      # Clean up runner
      ########################################
      - uses: ./.github/workflows/manage-runner-post
        name: "ü™ì Tear down runner"
        if: ${{ !startsWith(runner.name, 'dre-runner-custom') }}
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
