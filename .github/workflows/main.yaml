name: Build and test
on:
  push:
    branches:
      - "main"
    tags:
      - "v*"
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  bazel:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: "☁️ Setup runner"
        uses: ./.github/workflows/manage-runner-pre

      ########################################
      # Build and test
      ########################################
      - name: "🚀 Building"
        uses: ./.github/workflows/prepare-release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          function bazel_build_auto_repin() {
              local MYTMPDIR="$(mktemp -d)"
              trap 'rm -rf -- "$MYTMPDIR"' EXIT
              local logfile="$MYTMPDIR/bazel-out.log" 
              bazel "$@" 2>&1 | tee "$logfile" >&2
              local r=${PIPESTATUS[0]}
              if [ "$r" != "0" ]; then
                  if grep -q 'Digests do not match' "$logfile" ; then
                      # Repin necessary; only apply to this build
                      CARGO_BAZEL_REPIN=true bazel "$@" || return $?
                      git pull
                      git config user.name "GitHub Actions"
                      git config user.email "actions@github.com"
                      git add Cargo.Bazel.lock
                      git commit -m "GITHUB ACTIONS: run bazel REPIN"
                      git push origin HEAD:${{ github.head_ref }}
                      return 1
                  else
                      # Other failure, let's make like a tree and leave
                      return $r
                  fi
              fi
          }
          
          bazel_build_auto_repin build ...
      - run: bazel test ...
        name: "🚀 Testing"

      ########################################
      # Upload test artifacts
      ########################################
      - name: "🧪 Upload test artifacts"
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: bazel-out/k8-opt/bin/rs/ic-observability/multiservice-discovery/multiservice-discovery

      ########################################
      # Prepare release
      ########################################
      - name: "🚢 Prepare release"
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        uses: ./.github/workflows/prepare-release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      ########################################
      # Upload container images
      ########################################
      - name:  "🔧 Login to GitHub Container Registry"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: "📦 Push images to GitHub Container Registry"
        if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.head_ref, 'container') || startsWith(github.ref, 'refs/heads/container') || (github.ref == 'refs/heads/main') }}
        run: bazel query --noshow_progress 'kind("oci_push", ...)' | xargs -I_target bazel run _target -- --tag ${GITHUB_SHA}

      ########################################
      # Update k8s deployments
      ########################################
      - name: "🤖 Update k8s deployments"
        if: ${{ startsWith(github.ref, 'refs/tags/v') || startsWith(github.head_ref, 'container') || startsWith(github.ref, 'refs/heads/container') || (github.ref == 'refs/heads/main') }}
        uses: ./.github/workflows/update-k8s-deployments
        with:
          gitlab_api_token: ${{ secrets.GITLAB_API_TOKEN }}

      ########################################
      # Clean up runner
      ########################################
      - uses: ./.github/workflows/manage-runner-post
        name: "🪓 Tear down runner"
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
