name: Check if a path was modified
description: Reusable action for checking if a file path is modified as a step. It outputs a `changed` variable which can be referenced later.

inputs:
  path:
    description: "Path to check -- can be a space-separated list of bash [[]]-compatible globs"
    required: true
outputs:
  changed:
    description: "Whether any of the files matching the globs specified changed between the base and the head commit"
    value: ${{ steps.check-changed.outputs.changed }}

runs:
  using: composite
  steps:
    ########################################
    # Check to see if files changed
    ########################################
    - name: "🔍 Check whether $PATH_TO_CHECK were modified in between the commit range"
      id: check-changed
      env:
        PATH_TO_CHECK: ${{ inputs.path }}
      shell: bash
      run: |
        set -eExou pipefail

        if [[ -v GITHUB_BASE_REF ]] && [ "$GITHUB_BASE_REF" != "" ]
        then
          base=$GITHUB_BASE_REF
          src=origin/"$base"
          next="$GITHUB_SHA"
        else
          base=${{ github.event.before }}
          src="$base"
          next=${{ github.event.after }}
        fi
        git fetch origin $base $next
        git diff --name-only "$src" "$next" > files.txt
        echo "=============== list modified files ===============" >&2
        cat files.txt >&2
        while IFS= read -r file
        do
          set -f # turn off globbing for what I am about to do
          for subpath_to_check in $PATH_TO_CHECK
          do
            if [[ $file = $subpath_to_check ]]; then
              echo "File $file matching $subpath_to_check changed between $base and $next." >> "$GITHUB_STEP_SUMMARY"
              echo "changed=true" >> $GITHUB_OUTPUT
              exit
            fi
          done
        done < files.txt
        echo "No files changed between $base and $next." >> "$GITHUB_STEP_SUMMARY"
        echo "changed=false" >> $GITHUB_OUTPUT
