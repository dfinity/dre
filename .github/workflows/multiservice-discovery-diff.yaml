name: multiservice-discovery diff

on:
  push:
    branches:
      - add-multiservice-discovery-diff
# on:
#   pull_request:
#     paths:
#       - 'rs/ic-observability/multiservice-discovery/src/*'
#     types:
#       - opened
#       - synchronize

jobs:
  compute-targets-diff:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: "ðŸ”§ Setup runner"
        uses: ./.github/workflows/manage-runner-pre

      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - name: branch-run
        id: branch-run
        run: |
          mkdir -p registry
          bazel run //rs/ic-observability/multiservice-discovery -- --targets-dir /home/runner/work/dre/dre/registry &
          pid=$!
          while ! nc -z localhost 8000; do
              sleep 1
          done
          result=$(curl -sL http://localhost:8000/prom/targets)
          kill $pid
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "result<<$EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          ref: main

      - name: main run
        id: main-run
        run: |
          mkdir -p registry
          bazel run //rs/ic-observability/multiservice-discovery -- --targets-dir /home/runner/work/dre/dre/registry &
          pid=$!
          while ! nc -z localhost 8000; do
              sleep 1
          done
          result=$(curl -sL http://localhost:8000/prom/targets)
          kill $pid
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "result<<$EOF" >> $GITHUB_OUTPUT
          echo "$result" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - uses: int128/diff-action@v1
        with:
          base: ${{ steps.main-run.outputs.result }}
          head: ${{ steps.branch-run.outputs.result }}
