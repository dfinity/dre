name: Build and repin
description: Reusable action for building and repin with bazel

inputs:
  GITHUB_TOKEN:
    description: "Github SA PTA for the repo allowing workflows to run actions"
    required: true

runs:
  using: composite
  steps:
    - name: "Cargo deny checks"
      # Only run on pull request.  No need to run on tag or push.
      if: ${{ contains(fromJSON('["pull_request"]'), github.event_name) }}
      id: cargo-deny
      run: |
        set -euxo pipefail
        rye sync
        rye run python3 scripts/cargo-deny-checks.py
      shell: bash

    - name: "Build and repin"
      id: build
      run: |
        set -euxo pipefail
        rm -rf /home/runner/work/_temp/*/cache.tzst
        function bazel_build_auto_repin() {
            MYTMPDIR="$(mktemp -d)"
            trap 'rm -rf -- "$MYTMPDIR"' EXIT
            local logfile="$MYTMPDIR/bazel-out.log"
            local r=0
            bazel "$@" 2>&1 | tee "$logfile" >&2 || r=1
            if [ "$r" != "0" ]; then
                if grep -q 'Digests do not match' "$logfile" ; then
                    echo "repin=true" >> $GITHUB_OUTPUT
                    return 0
                fi
            fi
            echo "repin=false" >> $GITHUB_OUTPUT
            return $r
        }
        bazel_build_auto_repin build --config=ci ...
      shell: bash

    - uses: actions/checkout@v4
      if: ${{ steps.build.outputs.repin == 'true' }}
      with:
        ref: ${{ github.head_ref }}
        token: ${{ inputs.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Commit files
      if: ${{ steps.build.outputs.repin == 'true' }}
      run: |
        set -euxo pipefail
        CARGO_BAZEL_REPIN=true bazel build ... || return $?
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -a -m "Github Action: Bazel Repin"
      shell: bash

    - name: Push changes
      if: ${{ steps.build.outputs.repin == 'true' }}
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.GITHUB_TOKEN }}
        branch: ${{ github.head_ref }}

    # TODO: right now we can't do it because our runners run in "kubernetes mode"
    #       we need them in "dind mode". Not sure how it will affect other parts
    #       of the runners.
    - name: Dry run tarballs
      if: ${{ !startsWith(runner.name, 'dre-runner-custom') }}
      shell: bash
      run: |
        set -euxo pipefail
        bazel query ... | grep -E "tarball$" | while IFS= read -r target; do
            echo "Testing $target"
            bazel run $target

            image=$(echo $target | awk -F: '{ print $1 }' | awk -F/ '{ print $NF }')
            image="localhost/$image"
            echo "Testing dry run on image: $image"
            ret=0
            output=$(docker run --rm $image --help 2>&1) || ret=$?
            if [ "$ret" != "0" ]
            then
              echo "$image failed to run.  Output:" >&2
              echo "$output" >&2
              exit "$ret"
            fi
        done
