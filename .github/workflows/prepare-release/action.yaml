name: Prepare release
description: Prepare a new GitHub release

inputs:
  github_token:
    description: "A GitHub token with permissions to create releases"
    required: true
  push_token:
    description: "Github token that has permissions to create a PR"
    required: true
  tag: 
    description: "Tag for the new version"
    required: true

runs:
  using: composite
  steps:
    - name: "🔨 Build binaries for other targets"
      shell: bash
      run: |
        rustup target add x86_64-apple-darwin
        cargo drecross
    - name: "⚒️ Extract binaries from bazel, so they can be pushed as GitHub artifacts in the next steps"
      shell: bash
      run: |
        set -eExuo pipefail
        # query the location of the bazel "dre" binary and copy it to the "/tmp/release" directory
        mkdir -p /tmp/release
        cp --dereference bazel-out/k8-opt/bin/rs/cli/dre /tmp/release/dre-x86_64-unknown-linux
        cp target/x86_64-apple-darwin/release/dre /tmp/release/dre-x86_64-apple-darwin

    - name: "⚒️ Generating release notes"
      shell: bash
      id: generate
      run: |
        cargo install git-cliff
        # Prepend to the ongoing CHANGELOG.md
        git cliff --unreleased --tag ${{ inputs.TAG }} --sort newest --prepend CHANGELOG.md 
        
        # Generate for this release only and save 
        # it in tmp so that we can create a PR with 
        # the same workflow
        git cliff --unreleased --tag ${{ inputs.TAG }} --sort newest > /tmp/current_release.md

    - name: "🆕 📢 Prepare release"
      # v0.1.15
      uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844
      with:
        token: ${{ inputs.GITHUB_TOKEN }}
        body_path: /tmp/current_release.md
        generate_release_notes: true
        draft: true
        prerelease: true
        files: |
          /tmp/release/*

    - name: "🆕 Create a new Pull Request with the changes"
      uses: peter-evans/create-pull-request@v7
      with:
        commit-message: "chore(release): Release ${{ inputs.TAG }}"
        branch: bot-release-{{ inputs.TAG }}
        title: "chore(release): new Release ${{ inputs.TAG }}"
        body: "This PR updates versions in the repo to the version of a new release [${{ inputs.TAG }}](https://github.com/dfinity/dre/releases/tag/${{ inputs.TAG }})"
        token: ${{ inputs.PUSH_TOKEN }}
        base: main
