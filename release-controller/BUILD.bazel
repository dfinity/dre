load("@python_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary")
load("@//tools/python:py_oci_image.bzl", "py_oci_image")
load("@bazel_skylib//rules:native_binary.bzl", "native_binary")
load("@aspect_bazel_lib//lib:tar.bzl", "tar")

deps = [
    requirement("requests"),
    requirement("pydrive2"),
    requirement("markdown"),
    requirement("markdownify"),
    requirement("pymdown-extensions"),
    requirement("pytest"),
    requirement("pygithub"),
    requirement("pytest-mock"),
    requirement("mammoth"),
    requirement("slack-sdk"),
    requirement("python-dotenv"),
    requirement("pydiscourse"),
    requirement("pydantic-yaml"),
    requirement("ic-py"),
    requirement("tenacity"),
]

dev_deps = [
    requirement("httpretty"),
    requirement("pytest-xdist"),
    requirement("types-requests"),
    requirement("mypy"),
]

env = {
    "BAZEL": "true",
}

reconciler_deps = glob(["*.py"], exclude = ["pytest.py", "commit_annotator.py", "ci_check.py"])

py_binary(
    name = "release-controller",
    main = "reconciler.py",
    srcs = reconciler_deps,
    tags = ["typecheck"],
    env = env,
    deps = deps,
)

py_binary(
    name = "commit_annotator",
    main = "commit_annotator.py",
    srcs = glob(
        ["*.py"],
    ),
    data = [":bazelisk", ":target_determinator"],
    env = env,
    deps = deps,
)

native_binary(
    name = "bazelisk",
    src = select({
        "@platforms//os:linux": "@bazelisk_linux//file",
    }),
    out = "bazel",
)

native_binary(
    name = "target_determinator",
    src = select({
        "@platforms//os:linux": "@target_determinator//file",
    }),
    out = "target-determinator",
)

long_tests = [
    "tests/test_commit_annotator.py",
]

py_test(
    name = "pytest",
    srcs = ["pytest.py"] + glob(["tests/*.py"], exclude = long_tests + ["tests/test_reconciler.py"]) + glob(["*.py"], exclude = ["pytest.py"]),
    data = glob(["tests/test_data/*"]),
    env = env,
    tags = ["no-sandbox"],
    deps = deps + dev_deps,
    env_inherit = ["HOME"],
)

py_test(
    name = "test_reconciler",
    srcs = ["pytest.py"] + ["tests/test_reconciler.py"] + glob(["tests/mock_*.py"]) + reconciler_deps,
    data = glob(["tests/test_data/*"]),
    main = "pytest.py",
    env = env,
    tags = ["no-sandbox", "typecheck"],
    deps = deps + dev_deps,
    env_inherit = ["HOME"],
)

tar(
    name = "bins_release_controller_tar",
    srcs = ["//rs/cli:dre"],
)

tar(
    name = "bins_commit_annotator_tar",
    srcs = [":bazelisk", ":target_determinator"],
)

py_oci_image(
    name = "oci_image",
    base = "@bazel_image_6_5_0",
    binary = ":release-controller",
    tars = [":bins_release_controller_tar"]
)

py_oci_image(
    name = "oci_image_commit_annotator",
    base = "@bazel_image_6_5_0",
    binary = ":commit_annotator",
    tars = [":bins_commit_annotator_tar"]
)

exports_files(["README.md"])
