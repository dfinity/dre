load("@python_deps//:requirements.bzl", "requirement")
load("@rules_python//python:defs.bzl", "py_binary")
load("@//tools/python:py_oci_image.bzl", "py_oci_image")
load("@bazel_skylib//rules:native_binary.bzl", "native_binary")

deps = [
    requirement("requests"),
    requirement("pydrive2"),
    requirement("markdown"),
    requirement("markdownify"),
    requirement("pymdown-extensions"),
    requirement("pytest"),
    requirement("pygithub"),
    requirement("pytest-mock"),
    requirement("mammoth"),
    requirement("slack-sdk"),
    requirement("python-dotenv"),
    requirement("pydiscourse"),
    requirement("pydantic-yaml"),
    requirement("ic-py"),
    "//pylib",
]

dev_deps = [
    requirement("httpretty"),
]

env = {
    "BAZEL": "true",
}

py_binary(
    name = "release_controller",
    main = "reconciler.py",
    srcs = glob(
        ["*.py"],
        exclude = [
            "test_*.py",
            "pytest.py",
        ],
    ),
    env = env,
    deps = deps,
)

py_binary(
    name = "commit_annotator",
    main = "commit_annotator.py",
    srcs = glob(
        ["*.py"],
        exclude = [
            "test_*.py",
            "pytest.py",
        ],
    ),
    data = [":bazelisk", ":target_determinator"],
    env = env,
    deps = deps,
)

native_binary(
    name = "bazelisk",
    src = select({
        "@platforms//os:linux": "@bazelisk_linux//file",
    }),
    out = "bazelisk",
)

native_binary(
    name = "target_determinator",
    src = select({
        "@platforms//os:linux": "@target_determinator//file",
    }),
    out = "target-determinator",
)

long_tests = [
    "test_commit_annotator.py",
]

py_test(
    name = "pytest",
    srcs = ["pytest.py"],
    data = glob(["*.py"], exclude = long_tests) + [":bazelisk", ":target_determinator"],
    env = env,
    tags = ["no-sandbox"],
    deps = deps + dev_deps,
    env_inherit = ["HOME"],
)

py_test(
    name = "pytest_large",
    srcs = ["pytest.py"],
    main = "pytest.py",
    data = long_tests + glob(["*.py"], exclude = ["test*.py"]) + [":bazelisk", ":target_determinator"],
    env = env,
    tags = ["no-sandbox"],
    deps = deps + dev_deps,
    env_inherit = ["HOME"],
    size = "large",
)

py_oci_image(
    name = "oci_image",
    base = "@bazel_image_6_5_0",
    binary = ":release_controller",
)

py_oci_image(
    name = "oci_image_commit_annotator",
    base = "@bazel_image_6_5_0",
    binary = ":commit_annotator",
)

exports_files(["README.md"])
