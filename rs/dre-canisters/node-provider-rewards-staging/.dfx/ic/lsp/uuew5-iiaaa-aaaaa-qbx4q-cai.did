type BaseRewards = record {
  region : opt text;
  daily_xdr_permyriad : opt Decimal;
  node_reward_type : opt text;
  monthly_xdr_permyriad : opt Decimal;
};
type BaseRewardsType3 = record {
  region : opt text;
  value_xdr_permyriad : opt Decimal;
  nodes_count : opt nat64;
  avg_coefficient_percent : opt Decimal;
  avg_rewards_xdr_permyriad : opt Decimal;
};
type DayUtc = record { value : opt nat64 };
type Decimal = record { human_readable : opt text };
type GetNodeProviderRewardsCalculationRequest = record {
  from_day_timestamp_nanos : nat64;
  to_day_timestamp_nanos : nat64;
  provider_id : principal;
};
type GetNodeProviderRewardsCalculationResponse = variant {
  Ok : vec NodeProviderRewardsDaily;
  Err : text;
};
type GetNodeProvidersMonthlyXdrRewardsRequest = record {
  registry_version : opt nat64;
};
type GetNodeProvidersMonthlyXdrRewardsResponse = record {
  error : opt text;
  rewards : opt NodeProvidersMonthlyXdrRewards;
};
type GetNodeProvidersRewardsRequest = record {
  from_day_timestamp_nanos : nat64;
  to_day_timestamp_nanos : nat64;
};
type GetNodeProvidersRewardsResponse = variant {
  Ok : NodeProvidersRewards;
  Err : text;
};
type NodeMetricsDaily = record {
  subnet_assigned : opt principal;
  original_fr_percent : opt Decimal;
  num_blocks_proposed : opt nat64;
  subnet_assigned_fr_percent : opt Decimal;
  relative_fr_percent : opt Decimal;
  num_blocks_failed : opt nat64;
};
type NodeProviderRewards = record {
  rewards_total_xdr_permyriad : opt Decimal;
  nodes_results : vec NodeResults;
  base_rewards : vec BaseRewards;
  base_rewards_type3 : vec BaseRewardsType3;
};
type NodeProviderRewardsDaily = record {
  node_provider_rewards : opt NodeProviderRewards;
  day_utc : opt DayUtc;
};
type NodeProvidersMonthlyXdrRewards = record {
  registry_version : opt nat64;
  rewards : vec record { principal; nat64 };
};
type NodeProvidersRewards = record {
  rewards_xdr_permyriad : vec record { principal; nat64 };
};
type NodeResults = record {
  region : opt text;
  rewards_reduction_percent : opt Decimal;
  node_id : opt principal;
  node_status : opt NodeStatus;
  base_rewards_xdr_permyriad : opt Decimal;
  node_reward_type : opt text;
  adjusted_rewards_xdr_permyriad : opt Decimal;
  performance_multiplier_percent : opt Decimal;
  dc_id : opt text;
};
type NodeStatus = variant {
  Unassigned : record { extrapolated_fr_percent : opt Decimal };
  Assigned : record { node_metrics : opt NodeMetricsDaily };
};
service : {
  get_node_provider_rewards_calculation : (
      GetNodeProviderRewardsCalculationRequest,
    ) -> (GetNodeProviderRewardsCalculationResponse) query;
  get_node_providers_monthly_xdr_rewards : (
      GetNodeProvidersMonthlyXdrRewardsRequest,
    ) -> (GetNodeProvidersMonthlyXdrRewardsResponse);
  get_node_providers_rewards : (GetNodeProvidersRewardsRequest) -> (
      GetNodeProvidersRewardsResponse,
    );
}