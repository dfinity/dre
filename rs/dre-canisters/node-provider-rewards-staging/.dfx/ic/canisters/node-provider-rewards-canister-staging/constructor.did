type DailyNodeFailureRate = variant {
  SubnetMember : record { node_metrics : opt NodeMetricsDaily };
  NonSubnetMember : record { extrapolated_fr_percent : opt float64 };
};
type DailyNodeProviderRewards = record {
  rewards_total_xdr_permyriad : opt nat64;
  base_rewards : vec NodeTypeRegionBaseRewards;
  daily_nodes_rewards : vec DailyNodeRewards;
  base_rewards_type3 : vec Type3BaseRewards;
};
type DailyNodeRewards = record {
  region : opt text;
  rewards_reduction_percent : opt float64;
  node_id : opt principal;
  daily_node_fr : opt DailyNodeFailureRate;
  base_rewards_xdr_permyriad : opt nat64;
  node_reward_type : opt text;
  adjusted_rewards_xdr_permyriad : opt nat64;
  performance_multiplier_percent : opt float64;
  dc_id : opt text;
};
type DailyResults = record {
  subnets_fr : vec record { principal; float64 };
  provider_results : vec record { principal; DailyNodeProviderRewards };
};
type DateUtc = record { day : opt nat32; month : opt nat32; year : opt nat32 };
type GetNodeProvidersMonthlyXdrRewardsRequest = record {
  registry_version : opt nat64;
};
type GetNodeProvidersMonthlyXdrRewardsResponse = record {
  error : opt text;
  rewards : opt NodeProvidersMonthlyXdrRewards;
};
type GetNodeProvidersRewardsCalculationRequest = record { day : DateUtc };
type GetNodeProvidersRewardsCalculationResponse = variant {
  Ok : DailyResults;
  Err : text;
};
type GetNodeProvidersRewardsRequest = record {
  to_day : DateUtc;
  from_day : DateUtc;
};
type GetNodeProvidersRewardsResponse = variant {
  Ok : NodeProvidersRewards;
  Err : text;
};
type NodeMetricsDaily = record {
  subnet_assigned : opt principal;
  original_fr_percent : opt float64;
  num_blocks_proposed : opt nat64;
  subnet_assigned_fr_percent : opt float64;
  relative_fr_percent : opt float64;
  num_blocks_failed : opt nat64;
};
type NodeProvidersMonthlyXdrRewards = record {
  registry_version : opt nat64;
  rewards : vec record { principal; nat64 };
};
type NodeProvidersRewards = record {
  rewards_xdr_permyriad : vec record { principal; nat64 };
};
type NodeTypeRegionBaseRewards = record {
  region : opt text;
  daily_xdr_permyriad : opt nat64;
  node_reward_type : opt text;
  monthly_xdr_permyriad : opt nat64;
};
type Type3BaseRewards = record {
  region : opt text;
  daily_xdr_permyriad : opt nat64;
  nodes_count : opt nat64;
  avg_coefficient_percent : opt float64;
  avg_rewards_xdr_permyriad : opt nat64;
};
service : () -> {
  get_node_providers_monthly_xdr_rewards : (
      GetNodeProvidersMonthlyXdrRewardsRequest,
    ) -> (GetNodeProvidersMonthlyXdrRewardsResponse);
  get_node_providers_rewards : (GetNodeProvidersRewardsRequest) -> (
      GetNodeProvidersRewardsResponse,
    );
  get_node_providers_rewards_calculation : (
      GetNodeProvidersRewardsCalculationRequest,
    ) -> (GetNodeProvidersRewardsCalculationResponse) query;
}