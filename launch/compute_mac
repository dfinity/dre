#!/usr/bin/python3
import re
import sys
from random import Random


def ansible_random_mac(value: str, seed: str):
    """Take string prefix, and return it completed with random bytes to get a complete 6 bytes MAC address."""
    if not isinstance(value, str):
        raise ValueError("Invalid value type (%s) for random_mac (%s)" % (type(value), value))

    value = value.lower()
    mac_items = value.split(":")

    if len(mac_items) > 5:
        raise ValueError("Invalid value (%s) for random_mac: 5 colon(:) separated" " items max" % value)

    err = ""
    for mac in mac_items:
        if not mac:
            err += ",empty item"
            continue
        if not re.match("[a-f0-9]{2}", mac):
            err += ",%s not hexa byte" % mac
    err = err.strip(",")

    if err:
        raise ValueError("Invalid value (%s) for random_mac: %s" % (value, err))

    r = Random(seed)
    # Generate random int between x1000000000 and xFFFFFFFFFF
    v = r.randint(68719476736, 1099511627775)
    # Select first n chars to complement input prefix
    remain = 2 * (6 - len(mac_items))
    rnd = ("%x" % v)[:remain]
    return value + re.sub(r"(..)", r":\1", rnd)


seed = "%s %s 1" % (sys.argv[1], sys.argv[2])
mac = ansible_random_mac("52:01", seed)
# print("seed=%s\nmac=%s" % (seed, mac), file=sys.stderr)
print(mac)
