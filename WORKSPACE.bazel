workspace(
    name = "dre",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# rules_rust:0.61.0 depends on UEFI, so let's pin platforms repository to a version that includes UEFI support
http_archive(
    name = "platforms",
    sha256 = "3384eb1c30762704fbe38e440204e114154086c8fc8a8c2e3e28441028c019a8",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/1.0.0/platforms-1.0.0.tar.gz",
        "https://github.com/bazelbuild/platforms/releases/download/1.0.0/platforms-1.0.0.tar.gz",
    ],
)

http_archive(
    name = "rules_rust",
    integrity = "sha256-U8G6x+xI985IxMHGqgBvJ1Fa3SrrBXJZNyJObgDsfOo=",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.61.0/rules_rust-0.61.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")
load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rules_rust_dependencies()

rust_analyzer_dependencies()

rust_register_toolchains(
    edition = "2024",
    versions = [
        "1.90.0",
    ],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

load("//bazel:external_crates.bzl", "external_crates_repository")

external_crates_repository()

load("@crate_index_dre//:defs.bzl", "crate_repositories")

crate_repositories()

load("//3rdparty/bazel-rules-openssl:repos.bzl", openssl_repos="repos")
openssl_repos()

load("@com_github_3rdparty_bazel_rules_openssl//bazel:deps.bzl", openssl_deps="deps")
openssl_deps()
