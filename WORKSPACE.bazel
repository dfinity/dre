workspace(
    name = "dre",
)

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive", "http_file")

http_archive(
    name = "bazel_skylib",
    sha256 = "f7be3474d42aae265405a592bb7da8e171919d74c16f082a5457840f06054728",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.2.1/bazel-skylib-1.2.1.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")

bazel_skylib_workspace()

http_archive(
    name = "rules_python",
    patch_args = ["-p1"],
    patches = [
        # https://github.com/bazelbuild/rules_python/pull/1166#issuecomment-1641878169
        "//bazel/patches:rules_python_annotation.patch",
    ],
    sha256 = "0a8003b044294d7840ac7d9d73eef05d6ceb682d7516781a4ec62eeb34702578",
    strip_prefix = "rules_python-0.24.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.24.0/rules_python-0.24.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories", "python_register_toolchains")
load("@rules_python//python/pip_install:pip_repository.bzl", "package_annotation")

py_repositories()

python_register_toolchains(
    name = "python3_11",
    python_version = "3.11.1",
)

load("@python3_11//:defs.bzl", "interpreter")
load("@rules_python//python:pip.bzl", "pip_parse")

pip_parse(
    name = "python_deps",
    annotations = {
        "poetry-plugin-export": package_annotation(
            excluded_deps = ["poetry"],
        ),
        "ansible-base": package_annotation(
            additive_build_content = '''
exports_files(["bin/ansible-inventory"])
            ''',
        ),
    },
    python_interpreter_target = interpreter,
    requirements_lock = "//:requirements.txt",
)

load("@python_deps//:requirements.bzl", "install_deps")

install_deps()

IC_REPO_VERSION = "4b3b2ce76c4bde0c1c60fb80b0915931003b7eca"

http_archive(
    name = "ic_repo",
    sha256 = "34426b59612b23357799be48aed82870d298f7dbee96c9792ee3fe744ad2c2e3",
    strip_prefix = "ic-{}".format(IC_REPO_VERSION),
    url = "https://github.com/dfinity/ic/archive/{}.tar.gz".format(IC_REPO_VERSION),
)

http_archive(
    name = "rules_rust",
    sha256 = "6357de5982dd32526e02278221bb8d6aa45717ba9bbacf43686b130aa2c72e1e",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.30.0/rules_rust-v0.30.0.tar.gz"],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")
load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rules_rust_dependencies()

rust_analyzer_dependencies()

rust_register_toolchains(
    edition = "2021",
    versions = [
        "1.71.1",
    ],
)

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

load("//bazel:external_crates.bzl", "external_crates_repository")

external_crates_repository()

load("@crate_index_dre//:defs.bzl", "crate_repositories")

crate_repositories()

http_file(
    name = "ic-icrc1-archive",
    downloaded_file_path = "ic-icrc1-archive.wasm.gz",
    sha256 = "46aac8f1db925e166a1d8fc45ff33505a41afb6f9ba0581028b76199e0a07727",
    url = "https://download.dfinity.systems/ic/4b3b2ce76c4bde0c1c60fb80b0915931003b7eca/canisters/ic-icrc1-archive.wasm.gz",
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "bc3dbf1f09dba1b2eb3f2f70352ee97b9049066c9040ce0c9b67fb3294e91e4b",
    strip_prefix = "protobuf-3.15.5",
    # this version is imported through io_bazel_rules_go in IC repo
    urls = [
        "https://github.com/protocolbuffers/protobuf/archive/v3.15.5.tar.gz",
        "https://mirror.bazel.build/github.com/protocolbuffers/protobuf/archive/v3.15.5.tar.gz",
    ],
)

load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")

protobuf_deps()

RULES_FOREIGN_CC_VERSION = "9acbb356916760192d4c16301a69267fe44e6dec"

http_archive(
    name = "rules_foreign_cc",
    sha256 = "db6fcdb4f5ac217658f2c3aabd61e618d7fadc1cdf7d806ab1b52f2709d3fc66",
    strip_prefix = "rules_foreign_cc-{}".format(RULES_FOREIGN_CC_VERSION),
    url = "https://github.com/bazelbuild/rules_foreign_cc/archive/{}.tar.gz".format(RULES_FOREIGN_CC_VERSION),
)

load("@rules_foreign_cc//foreign_cc:repositories.bzl", "rules_foreign_cc_dependencies")

rules_foreign_cc_dependencies()

load("//bazel:openssl_repositories.bzl", "openssl_repositories")

openssl_repositories()

load("@ic_repo//third_party/openssl:openssl_setup.bzl", "openssl_setup")

openssl_setup()

http_archive(
    name = "rules_oci",
    sha256 = "176e601d21d1151efd88b6b027a24e782493c5d623d8c6211c7767f306d655c8",
    strip_prefix = "rules_oci-1.2.0",
    url = "https://github.com/bazel-contrib/rules_oci/releases/download/v1.2.0/rules_oci-v1.2.0.tar.gz",
)

load("@rules_oci//oci:dependencies.bzl", "rules_oci_dependencies")

rules_oci_dependencies()

load("@rules_oci//oci:repositories.bzl", "LATEST_CRANE_VERSION", "LATEST_ZOT_VERSION", "oci_register_toolchains")

oci_register_toolchains(
    name = "oci",
    crane_version = LATEST_CRANE_VERSION,
)

load("@rules_oci//oci:pull.bzl", "oci_pull")

oci_pull(
    name = "distroless_cc",
    digest = "sha256:8aad707f96620ee89e27febef51b01c6ff244277a3560fcfcfbe68633ef09193",
    image = "gcr.io/distroless/cc",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)

oci_pull(
    # tag = 0.34.1-distroless-libc
    name = "vector",
    digest = "sha256:4447025bc3a99b3a96ed0352e990c44040784590de5a1ea8e4e5b75b76a16665",
    image = "index.docker.io/timberio/vector",
)

oci_pull(
    # tag = 0.34.1-debian
    name = "vector-debian",
    digest = "sha256:6d8cf7cbafe8591d3e04d9f4aa9889c720ab36bb8712cad04979261d35b501cf",
    image = "index.docker.io/timberio/vector",
)

oci_pull(
    # tag = "2.43.0-debian-11-r1",
    name = "bitnami_git_docker_img",
    digest = "sha256:a8e11f1fdcb57ef7b2ab12995bb28b9060e7dbffa17f75136f523e92f6f270e0",
    image = "index.docker.io/bitnami/git",
)

oci_pull(
    # tag = bookworm-20231218-slim
    name = "debian-slim",
    digest = "sha256:45287d89d96414e57c7705aa30cb8f9836ef30ae8897440dd8f06c4cff801eec",
    image = "index.docker.io/library/debian",
)

oci_pull(
    name = "distroless_python3",
    digest = "sha256:db34936540e7bc575cc24a318e41eae7ad8c426b8d8e20a465f0dd67843590eb",
    image = "gcr.io/distroless/python3",
    platforms = [
        "linux/amd64",
        "linux/arm64",
    ],
)

oci_pull(
    name = "python3",
    digest = "sha256:5120c734a5ba810c47b97a80cdc6e03004bd4ff7ad98e492b9ccdaf70ff2b8d6",
    image = "index.docker.io/library/python",
)

http_archive(
    name = "rules_pkg",
    sha256 = "8f9ee2dc10c1ae514ee599a8b42ed99fa262b757058f65ad3c384289ff70c4b8",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
        "https://github.com/bazelbuild/rules_pkg/releases/download/0.9.1/rules_pkg-0.9.1.tar.gz",
    ],
)

load("@rules_pkg//:deps.bzl", "rules_pkg_dependencies")

rules_pkg_dependencies()
